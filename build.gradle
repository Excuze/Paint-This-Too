buildscript {
	repositories {
		jcenter()
		maven { url = "http://files.minecraftforge.net/maven" }
	}
	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT"
	}
}

apply plugin: "net.minecraftforge.gradle.forge"
version = getVersion("VERSION")
group= "com.pau101.paintthis"
archivesBaseName = "paintthis"
sourceCompatibility = targetCompatibility = "1.8"
def forgeVersion = "1.10.2-12.18.3.2185"

minecraft {
	version = forgeVersion
	runDir = "minecraft"
	mappings = "snapshot_20161111"
	makeObfSourceJar = false
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version
	inputs.property "forgeversion", forgeVersion
	from(sourceSets.main.resources.srcDirs) {
		include "mcmod.info"
		expand "version": project.version, "mcversion": project.minecraft.version, "forgeversion": forgeVersion
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude "mcmod.info"
	}
}

jar {
	classifier = "1.10.2"
	manifest {
		attributes "FMLCorePlugin": "com.pau101.paintthis.asm.PaintThisLoadingPlugin"
		attributes "FMLCorePluginContainsFMLMod": "true"
		attributes "FMLAT": "paintthis_at.cfg"
	}
}

String getVersion(String type) {
	String major = "0";
	String revision = "0";
	String patch = "0";
	String prefix = "public static final String $type = \"";
	File file = file("src/main/java/com/pau101/paintthis/PaintThis.java")
	file.eachLine { String s ->
		s = s.trim();
		if (s.startsWith(prefix)) {
			s = s.substring(prefix.length(), s.length() - 2);
			String[] pts = s.split("\\.");
			major = pts[0];
			revision = pts[1];
			patch = pts[2];
		}
	}
	return "$major.$revision.$patch";
}
